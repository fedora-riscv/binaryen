diff -up binaryen-version_95/check.py.orig binaryen-version_95/check.py
--- binaryen-version_95/check.py.orig	2020-07-21 06:04:33.000000000 +0200
+++ binaryen-version_95/check.py	2020-07-29 02:51:08.835674121 +0200
@@ -304,7 +304,7 @@ def run_gcc_tests():
             expected = os.path.join(shared.get_test_dir('example'), '.'.join(t.split('.')[:-1]) + '.txt')
         if src.endswith(('.c', '.cpp')):
             # build the C file separately
-            libpath = os.path.join(os.path.dirname(shared.options.binaryen_bin),  'lib')
+            libpath = shared.options.binaryen_lib
             extra = [shared.NATIVECC, src, '-c', '-o', 'example.o',
                      '-I' + os.path.join(shared.options.binaryen_root, 'src'), '-g', '-L' + libpath, '-pthread']
             if src.endswith('.cpp'):
diff -up binaryen-version_95/scripts/test/shared.py.orig binaryen-version_95/scripts/test/shared.py
--- binaryen-version_95/scripts/test/shared.py.orig	2020-07-21 06:04:33.000000000 +0200
+++ binaryen-version_95/scripts/test/shared.py	2020-07-29 02:50:14.650257339 +0200
@@ -53,6 +53,12 @@ def parse_args(args):
               ' If not specified, the environment variable BINARYEN_ROOT= can also'
               ' be used to adjust this.'))
     parser.add_argument(
+        '--binaryen-lib', dest='binaryen_lib', default='',
+        help=('Specifies a path to where the built Binaryen shared library resides at.'
+              ' Default: lib/ of current directory (i.e. assume an in-tree build).'
+              ' If not specified, the environment variable BINARYEN_ROOT= can also'
+              ' be used to adjust this.'))
+    parser.add_argument(
         '--binaryen-root', dest='binaryen_root', default='',
         help=('Specifies a path to the root of the Binaryen repository tree.'
               ' Default: the directory where this file check.py resides.'))
@@ -101,6 +107,18 @@ def warn(text):
 
 # setup
 
+if not options.binaryen_lib:
+    if os.environ.get('BINARYEN_ROOT'):
+        if os.path.isdir(os.path.join(os.environ.get('BINARYEN_ROOT'), 'lib')):
+            options.binaryen_lib = os.path.join(
+                os.environ.get('BINARYEN_ROOT'), 'lib')
+        else:
+            options.binaryen_lib = os.environ.get('BINARYEN_ROOT')
+    else:
+        options.binaryen_lib = 'lib'
+
+options.binaryen_lib = os.path.normpath(os.path.abspath(options.binaryen_lib))
+
 # Locate Binaryen build artifacts directory (bin/ by default)
 if not options.binaryen_bin:
     if os.environ.get('BINARYEN_ROOT'):
